
<!DOCTYPE html>
<html lang="en">
  <head>
	<meta charset="utf-8">
	<title>Bootswatch: Superhero</title>
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<meta name="description" content="">
	<meta name="author" content="">

	<!-- Le HTML5 shim, for IE6-8 support of HTML elements -->
	<!--[if lt IE 9]>
	  <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
	<![endif]-->

	<!-- Le styles -->
	<link href="Content/css/bootstrap.css" rel="stylesheet">
	<link href="Content/css/bootstrap-responsive.min.css" rel="stylesheet">
	<link href="Content/css/docs.css" rel="stylesheet">

  </head>

  <body class="preview" data-spy="scroll" data-target=".subnav" data-offset="80">  
   <!-- Navbar
	================================================== -->
    <div class="navbar navbar-fixed-top">
        <div class="navbar-inner">
	        <div class="container">	   
	            <a class="brand" href="../">Bootswatch</a>
	            <div class="nav-collapse" id="main-menu">        
                    <ul class="nav" id="main-menu-left">	            
	                    <li><a id="swatch-link" href="/#gallery">Gallery</a></li>	            
                    </ul>                       
	            </div>
	        </div>
        </div>
    </div>

	<div class="container">


    
    <!--
    <header class="jumbotron subhead" id="overview">
      <div class="row">
	    <div class="span6">
	      <h1>MeetingCostCounter</h1>
	      <p class="lead">A preview of changes in this swatch.</p>
	    </div>	  
      </div>     
    </header>
    -->

    <div class="row">
        <div class="span12">

	        <form class="form-horizontal well">
	        <fieldset>               
		        <div class="control-group">
		        <label class="control-label" for="input01">Average salery (/hour)</label>
		        <div class="controls">
			        <input type="text" class="input-medium" id="input01" data-bind="value: averageSalary" placeholder="">			            
                    <p class="help-inline">In addition to freeform text, any HTML5 text-based input appears like so.</p>
		        </div>
                <label class="control-label" for="input01">Costs</label>
		        <div class="controls">
			        <input type="text" class="input-medium" id="input01" data-bind="value: costs" placeholder="">			            
                    <p class="help-inline">In addition to freeform text, any HTML5 text-based input appears like so.</p>
		        </div>
		        </div>		          
		        <div class="jumbotron">
		            <button type="submit" class="btn btn-primary" data-bind="click: start">Start counting</button>			
                </div>		                            
	        </fieldset>
	        </form>
            
        </div>

        <div class="span12">
            <input type="text" class="input-xlarge" id="input01" data-bind="value: totalCost">
            <input type="text" class="input-xlarge" id="input01" data-bind="value: secondsSinceStart">
        </div>
    </div>

	<footer class="footer">
	<p class="pull-right"><a href="#">Back to top</a></p>
	</footer>

</div><!-- /container -->
	
	<script src="Content/scripts/jquery.min.js" type="text/javascript"></script>
	<script src="Content/scripts/bootstrap.min.js" type="text/javascript"></script>
    <script src="Content/scripts/knockout-2.1.0.js" type="text/javascript"></script>
	<script type="text/javascript">

	    function ViewModel() {
	        var self = this;

	        this.averageSalary = ko.observable("50"),
			this.costs = ko.observable("20"),
			this.totalCost = ko.observable("");
	        this.secondsSinceStart = ko.observable(0),

			this.calculateTotalCost = function () {	  
			    var costs = parseInt(self.costs());
			    var saleryCosts = (self.secondsSinceStart() * (parseInt(self.averageSalary()) / 3600));
			    var totalCost = saleryCosts + costs;

			    self.totalCost(totalCost);
			},

			this.start = function () {
			    setInterval(function () {
			        self.calculateTotalCost();
			        self.secondsSinceStart(self.secondsSinceStart() + 1);			        
			    }, 1000);
			}
	    }

	    $(function () {
	        ko.applyBindings(new ViewModel());
	    });

	</script>

  </body>
</html>
